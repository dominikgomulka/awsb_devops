- name: Download MySQL upstream repository package
  ansible.builtin.shell: wget -O /tmp/mysql-apt-config.deb https://dev.mysql.com/get/mysql-apt-config_0.8.28-1_all.deb

- name: Configure MySQL upstream repository
  ansible.builtin.shell: env DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config.deb
  become: true

- name: Install MySQL Server
  ansible.builtin.shell: "ls -la"

- name: Delete old mysqld configuration
  ansible.builtin.shell: "ls -la"

- name: Copy new mysql configuration
  ansible.builtin.shell: "ls -la"

- name: Restart mysql service
  ansible.builtin.shell: "ls -la"

- name: Configure master node
  when: ENV_ROLE == "MASTER"
  become: true
  block:
    - name: Create MySQL user that will replicate data
      ansible.builtin.shell: "ls -la"
    - name: Get binlog file from primary node
      ansible.builtin.shell: "ls -la"

    - name: Get log position from primary node
      ansible.builtin.shell: "ls -la"

- name: Configure slave node
  when: ENV_ROLE == "SLAVE"
  become: true
  block:
    - name: Stop slave on second node
      ansible.builtin.shell: "ls -la"

    - name: Change master to primary node
      ansible.builtin.shell: "ls -la"

    - name: Start slave on secondary node
      ansible.builtin.shell: "ls -la"

    - name: Create MySQL user that will replicate data on secondary node
      ansible.builtin.shell: "ls -la"

    - name: Get binlog file from secondary node
      ansible.builtin.shell: "ls -la"

    - name: Get log position from secondary node
      ansible.builtin.shell: "ls -la"


- name: Start replication
  when: ENV_ROLE == "MASTER"
  become: true
  block:
    - name: Stop slave on primary node
      ansible.builtin.shell: "ls -la"

    - name: Change master to primary node
      ansible.builtin.shell: "ls -la"

    - name: Start slave on primary node
      ansible.builtin.shell: "ls -la"
